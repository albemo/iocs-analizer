{"version":3,"sources":["components/NavbarComponent.tsx","components/excel/ExportExcelComponent.tsx","components/AlertDismissibleExample.tsx","components/excel/UploadExcelComponent.tsx","components/ioc/IocComponent.tsx","components/ip/IpComponent.tsx","App.tsx","index.tsx"],"names":["NavbarComponent","Navbar","bg","variant","expand","size","Brand","className","href","Toggle","aria-controls","Collapse","id","Nav","to","ExportExcelComponent","iocs","style","textDecoration","color","data","Button","AlertDismissibleExample","errorMessage","useState","show","setShow","Alert","onClose","dismissible","Heading","UploadExcelComponent","onFileSelectSuccess","readFile","disabledButton","setDisabledButton","name","setName","alert","setAlert","Form","Group","controlId","Label","download","File","label","custom","onChange","e","f","target","files","reader","FileReader","onload","result","readedData","XLSX","type","wsname","SheetNames","console","log","ws","Sheets","dataParse","sheet_to_json","header","readAsBinaryString","accept","onClick","disabled","IocComponent","setIocs","ioc","setIoc","buttonDisabled","setButtonDisabled","textareaDisabled","setTextareaDisabled","iocsCsv","setIocsCsv","showFormIoc","setShowFormIoc","showFormCsvIoc","setShowFormCsvIoc","useEffect","refresh","a","iocItems","axios","get","handleClose","save","hash","validateHash","headers","process","fetchIoc","item","sha256","attributes","sha1","md5","mcafee","last_analysis_results","McAfee","engines","last_analysis_stats","malicious","undetected","submit","response","status","request","message","isSha256","isSHA256","isSha1","isSHA1","isMd5","isMD5","some","i","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","post","then","res","catch","err","handleWindow","RegExp","test","newestOnTop","rtl","pauseOnFocusLoss","Modal","onHide","Header","closeButton","Title","Body","Footer","localStorage","clear","Control","fontSize","as","rows","value","file","forEach","length","pointerEvents","opacity","Table","striped","bordered","hover","map","el","key","IpComponent","ipsAbuseIp","setIpsAbuseIp","ipsVirusTotal","setIpsVirusTotal","ipsAlienvault","setIpsAlienvault","ip","setIp","setItem","JSON","stringify","error","validateIp","params","fetchIpAbuseIp","abuseConfidenceScore","domain","ipAddress","isp","lastReportedAt","totalReports","Date","parse","submitAbuseIp","fetchIPVirusTotal","data2","Object","values","lastAnalysisStats","filter","x","category","reports","submitVirusTotalIp","fetchIPalienvault","pulse_info","indicator","asn","countryName","country_name","pulseInfoCount","pulseInfoList","submitAlienVaultIp","isIPV4","ips","getItem","unshift","alt","src","height","ProgressBar","animated","now","Intl","DateTimeFormat","year","month","day","format","l","engine_name","slice","author","username","description","Array","from","tags","join","App","path","ReactDOM","render","document","getElementById"],"mappings":"4OA2BeA,MAtBf,WACE,OACE,oCACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,UAAUC,QAAQ,OAAOC,OAAO,MACzC,kBAAC,IAAD,CAAaC,KAAM,KACnB,kBAACJ,EAAA,EAAOK,MAAR,CAAcC,UAAU,OAAOC,KAAK,gBAApC,iBAGA,kBAACP,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,qBAC7B,kBAACT,EAAA,EAAOU,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKN,UAAU,WACb,kBAAC,IAAD,CAAMO,GAAG,eAAeP,UAAU,mBAAlC,OACA,kBAAC,IAAD,CAAMO,GAAG,MAAMP,UAAU,mBAAzB,W,0GCKGQ,MAVf,YAA+D,IAA/BC,EAA8B,EAA9BA,KAC9B,OACE,oCACE,kBAAC,UAAD,CAASC,MAAO,CAAEC,eAAgB,OAAQC,MAAO,QAAUC,KAAMJ,GAC/D,kBAACK,EAAA,EAAD,CAAQlB,QAAQ,WAAhB,oB,iBCCOmB,MAdf,YAA8E,IAA3CC,EAA0C,EAA1CA,aAA0C,EACnDC,oBAAS,GAD0C,mBACpEC,EADoE,KAC9DC,EAD8D,KAG3E,OAAID,EAEA,kBAACE,EAAA,EAAD,CAAOxB,QAAQ,SAASyB,QAAS,kBAAMF,GAAQ,IAAQG,aAAW,GAChE,kBAACF,EAAA,EAAMG,QAAP,gCACA,+BAAKP,EAAL,MAIC,sCCmFMQ,EA5Fc,SAAC,GAMvB,IALLC,EAKI,EALJA,oBACAC,EAII,EAJJA,SAII,EACwCT,oBAAS,GADjD,mBACGU,EADH,KACmBC,EADnB,OAEoBX,mBAAS,IAF7B,mBAEGY,EAFH,KAESC,EAFT,OAGsBb,oBAAS,GAH/B,mBAGGc,EAHH,KAGUC,EAHV,KAuCJ,OACE,oCACE,kBAACC,EAAA,EAAD,CAAMjC,UAAU,uBACd,kBAACiC,EAAA,EAAKC,MAAN,CAAYC,UAAU,gCACpB,wBAAInC,UAAU,oBAAd,+CAGA,kBAACiC,EAAA,EAAKG,MAAN,2EAEE,uBAAGnC,KAAK,wBAAwBoC,UAAQ,GACrC,IADH,oBAKF,6BACA,kBAACJ,EAAA,EAAKG,MAAN,yBACoB,IAClB,+BACE,qCAGJ,kBAACH,EAAA,EAAKK,KAAN,CACEjC,GAAG,cACHkC,MAAgB,KAATV,EAAc,sBAAwBA,EAC7CW,QAAM,EACNC,SA3Dc,SAACC,GACvB,IACEC,EADUD,EAAEE,OAAOC,MACT,GACZ,GAAIF,EACF,GAAIA,EAAE7C,KAAO,KAEX8B,GAAkB,GAClBI,GAAS,OACJ,CACLF,EAAQa,EAAEd,MACVD,GAAkB,GAClB,IAAIkB,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAAUN,GACxB,IAAI7B,EAAO6B,EAAEE,OAAOK,OAChBC,EAAaC,OAAUtC,EAAM,CAAEuC,KAAM,WACnCC,EAASH,EAAWI,WAAW,GACrCC,QAAQC,IAAI,SAAUH,GACtB,IAAMI,EAAKP,EAAWQ,OAAOL,GAC7BE,QAAQC,IAAI,KAAMC,GAGlB,IAAME,EAAYR,QAAWS,cAAcH,EAAI,CAAEI,OAAQ,IACzDN,QAAQC,IAAI,YAAaG,EAAU,IACnClC,EAAoBkC,EAAU,KAEhCb,EAAOgB,mBAAmBnB,QAG5BlB,EAAoB,MACpBG,GAAkB,GAClBE,EAAQ,KA8BFiC,OAAO,UAGX,yBAAK/D,UAAU,eACb,kBAACc,EAAA,EAAD,CACEd,UAAU,YACVJ,QAAQ,UACRoE,QAAStC,EACTuC,SAAUtC,GAJZ,kBAQCI,GACC,kBAAC,EAAD,CAAyBf,aAAa,6D,cCkQnCkD,MA3Uf,WAAyB,IAAD,EACEjD,mBAAqB,IADvB,mBACfR,EADe,KACT0D,EADS,OAEAlD,mBAAS,IAFT,mBAEfmD,EAFe,KAEVC,EAFU,OAGsBpD,oBAAS,GAH/B,mBAGfqD,EAHe,KAGCC,EAHD,OAI0BtD,oBAAS,GAJnC,mBAIfuD,EAJe,KAIGC,EAJH,OAKExD,oBAAS,GALX,mBAKfC,EALe,KAKTC,EALS,OAQQF,mBAAS,IARjB,mBAQfyD,EARe,KAQNC,EARM,OAUgB1D,oBAAS,GAVzB,mBAUf2D,EAVe,KAUFC,EAVE,OAYsB5D,oBAAS,GAZ/B,mBAYf6D,EAZe,KAYCC,EAZD,KActBC,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAO,uCAAG,8BAAAC,EAAA,6DACVC,EAAuB,GADb,kBAGKC,IAAMC,IAAI,qCAHf,OAGRxE,EAHQ,OAIZsE,EAAWtE,EAAKA,KAChBsD,EAAQgB,GALI,gDAOZ5B,QAAQC,IAAR,MAPY,yDAAH,qDAWP8B,EAAc,kBAAMnE,GAAQ,IAS5BoE,EAAI,uCAAG,WAAOC,GAAP,yBAAAN,EAAA,yDACSO,EAAaD,GADtB,wDAGXjB,GAAkB,GAClBE,GAAoB,GAJT,kBAOcW,IAAM,2CAAD,OACiBI,GAC3C,CACEE,QAAS,CAAE,WAAW,GAAX,OAAeC,uEAVrB,cAOHC,EAPG,OAcHC,EAAiB,CACrBC,OAAQF,EAAS/E,KAAKA,KAAKkF,WAAWD,OACtCE,KAAMJ,EAAS/E,KAAKA,KAAKkF,WAAWC,KACpCC,IAAKL,EAAS/E,KAAKA,KAAKkF,WAAWE,IACnCC,OACEN,EAAS/E,KAAKA,KAAKkF,WAAWI,sBAAsBC,OAAOnD,OAC7DoD,QAAQ,GAAD,OACLT,EAAS/E,KAAKA,KAAKkF,WAAWO,oBAAoBC,UAD7C,cAGLX,EAAS/E,KAAKA,KAAKkF,WAAWO,oBAAoBC,UAClDX,EAAS/E,KAAKA,KAAKkF,WAAWO,oBAAoBE,aAxB7C,UA4BHC,EAAOZ,GA5BJ,iEA+BL,KAAMa,UAKRnD,QAAQC,IAAI,sBAAuB,KAAMkD,SAAS7F,MAClD0C,QAAQC,IAAI,wBAAyB,KAAMkD,SAASC,QACpDpD,QAAQC,IAAI,yBAA0B,KAAMkD,SAAShB,UAC5C,KAAMkB,QAMfrD,QAAQC,IAAI,gBAAiB,KAAMoD,SAGnCrD,QAAQC,IAAI,gBAAiB,KAAMqD,SAErCtD,QAAQC,IAAI,QAAZ,MAGIsD,EAAWC,EAASvB,GACpBwB,EAASC,EAAOzB,GAChB0B,EAAQC,EAAM3B,GAEZK,EAAiB,CACrBC,OAAQgB,EAAWtB,EAAO,GAC1BQ,KAAMgB,EAASxB,EAAO,GACtBS,IAAKiB,EAAQ1B,EAAO,GACpBU,OAAQ,GACRG,QAAS,SA9DF,UAiEHI,EAAOZ,GAjEJ,QAmEXxB,EAAO,IACPE,GAAkB,GAClBE,GAAoB,GArET,0DAAH,sDAyEJgB,EAAe,SAACD,GACpB,IAAIsB,EAAWC,EAASvB,GACpBwB,EAASC,EAAOzB,GAChB0B,EAAQC,EAAM3B,GAClB,SAAIsB,GAAYE,GAAUE,IAItBT,EAAM,uCAAG,WAAOZ,GAAP,iBAAAX,EAAA,6DACTC,EAAuB,GADd,SAEIC,IAAMC,IAAI,qCAFd,UAET5E,EAFS,OAGb0E,EAAW1E,EAAKI,MACFsE,EAASiC,MACrB,SAACC,GAAD,OACEA,EAAEvB,SAAWD,EAAKC,QAAUuB,EAAErB,OAASH,EAAKG,MAAQqB,EAAEpB,MAAQJ,EAAKI,OAN1D,uBAUXqB,IAAMC,KAAN,yCAAmCnD,EAAnC,KAA2C,CACzCoD,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAjBD,2CAsBP3C,IACH4C,KAAK,oCAAqCnC,GAC1CoC,MAAK,SAACC,GAAD,OAAS3E,QAAQC,IAAI0E,MAC1BC,OAAM,SAACC,GAAD,OAAS7E,QAAQC,IAAI4E,MAzBjB,QA2BbnD,IA3Ba,4CAAH,sDAqCNoD,EAAe,SAAC3F,GACE,gBAAlBA,EAAEE,OAAOf,OACXgD,GAAe,GACfE,GAAkB,IAEE,mBAAlBrC,EAAEE,OAAOf,OACXkD,GAAkB,GAClBF,GAAe,KAIbkC,EAAW,SAACvB,GAChB,IACIuB,EADgB,IAAIuB,OAAO,qBACJC,KAAK/C,GAChC,OAAOuB,GAGHE,EAAS,SAACzB,GACd,IACIyB,EADc,IAAIqB,OAAO,qBACNC,KAAK/C,GAC5B,OAAOyB,GAGHE,EAAQ,SAAC3B,GACb,IACI2B,EADa,IAAImB,OAAO,kBACPC,KAAK/C,GAC1B,OAAO2B,GAGT,OACE,oCACE,kBAAC,IAAD,CACEK,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBc,aAAa,EACbb,cAAY,EACZc,KAAK,EACLC,kBAAgB,EAChBb,WAAS,EACTD,cAAY,IAGd,kBAAC,IAAD,MAGA,kBAACe,EAAA,EAAD,CAAOzH,KAAMA,EAAM0H,OAAQtD,GACzB,kBAACqD,EAAA,EAAME,OAAP,CAAcC,aAAW,GACvB,kBAACH,EAAA,EAAMI,MAAP,wBAEF,kBAACJ,EAAA,EAAMK,KAAP,qDACA,kBAACL,EAAA,EAAMM,OAAP,KACE,kBAACnI,EAAA,EAAD,CAAQlB,QAAQ,YAAYoE,QAASsB,GAArC,YAGA,kBAACxE,EAAA,EAAD,CAAQlB,QAAQ,UAAUoE,QAnLhB,WAChBsB,IACA4D,aAAaC,QACblE,MAgLM,eAOJ,yBAAKjF,UAAU,8BACb,6BACG4E,GACC,kBAAC9D,EAAA,EAAD,CAAQe,KAAK,cAAcjC,QAAQ,OAAOoE,QAASqE,GAAnD,2BAIDvD,GACC,kBAAChE,EAAA,EAAD,CAAQe,KAAK,iBAAiBjC,QAAQ,OAAOoE,QAASqE,GAAtD,wBAQLzD,GACC,kBAAC3C,EAAA,EAAD,CAAMjC,UAAU,uBACd,kBAACiC,EAAA,EAAKC,MAAN,CAAYC,UAAU,gCACpB,wBAAInC,UAAU,oBAAd,oCAGA,kBAACiC,EAAA,EAAKG,MAAN,gDAJF,IAImE,6BACjE,kBAACH,EAAA,EAAKG,MAAN,2BACsB,IACpB,+BACE,oDAGJ,kBAACH,EAAA,EAAKmH,QAAN,CACE1I,MAAO,CAAE2I,SAAU,QACnBC,GAAG,WACHC,KAAM,EACNC,MAAOpF,EACPtE,KAAM,KACN2C,SAAU,SAACC,GAAD,OAAO2B,EAAO3B,EAAEE,OAAO4G,QACjCvF,SAAUO,KAGd,yBAAKxE,UAAU,eACb,kBAACc,EAAA,EAAD,CACEd,UAAU,OACVJ,QAAQ,UACRoE,QAAS,kBAAMuB,EAAKnB,IACpBH,SAAUK,GAA0B,KAARF,GAJ9B,eAaLU,GACC,kBAAC,EAAD,CACErD,oBAAqB,SAACgI,GAAD,OAAe9E,EAAW8E,IAC/C/H,SA5HS,WACfgD,EAAQgF,SAAQ,SAACtF,GACfmB,EAAKnB,SA+HL,yBAAKpE,UAAU,wCACb,8BASA,yBACEA,UAAU,OACVU,MACkB,IAAhBD,EAAKkJ,OAAe,CAAEC,cAAe,OAAQC,QAAS,OAAU,IAGlE,kBAAC,EAAD,CAAsBpJ,KAAMA,MAGhC,yBACET,UAAU,mCACVU,MAAO,CAAE2I,SAAU,SAEnB,kBAACS,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACnK,KAAK,MACjC,+BACE,4BACE,iCACA,sCACA,qCACA,mCACA,sCACA,yCAGJ,+BACGW,EAAKyJ,KAAI,SAACC,EAAI9C,GAAL,OACR,wBAAI+C,IAAK/C,GACP,4BAAKA,EAAI,GACT,4BAAK8C,EAAGrE,QACR,4BAAKqE,EAAGnE,MACR,4BAAKmE,EAAGlE,KACR,4BAAKkE,EAAGjE,QACR,4BAAKiE,EAAG9D,kB,eCqTTgE,MA9lBf,WAAwB,IAAD,EACepJ,mBAA2B,IAD1C,mBACdqJ,EADc,KACFC,EADE,OAEqBtJ,mBAA8B,IAFnD,mBAEduJ,EAFc,KAECC,EAFD,OAGqBxJ,mBAA8B,IAHnD,mBAGdyJ,EAHc,KAGCC,EAHD,OAID1J,mBAAS,IAJR,mBAId2J,EAJc,KAIVC,EAJU,OAOuB5J,oBAAS,GAPhC,mBAOdqD,EAPc,KAOEC,EAPF,OAQ2BtD,oBAAS,GARpC,mBAQduD,EARc,KAQIC,EARJ,OASGxD,oBAAS,GATZ,mBASdC,EATc,KASRC,EATQ,KAuBrB6D,qBAAU,WACRC,MACC,IAEH,IAAMA,EAAO,uCAAG,sBAAAC,EAAA,sDAEd,IAEEgE,aAAa4B,QAAQ,aAAcC,KAAKC,UAAUV,IAClDpB,aAAa4B,QAAQ,gBAAiBC,KAAKC,UAAUR,IACrDtB,aAAa4B,QAAQ,gBAAiBC,KAAKC,UAAUN,IAErD,MAAOO,GACP1H,QAAQC,IAAIyH,GATA,2CAAH,qDAaP3F,EAAc,kBAAMnE,GAAQ,IAS5BoE,EAAI,uCAAG,WAAOqF,GAAP,qCAAA1F,EAAA,yDACOgG,EAAWN,GADlB,wDAGXrG,GAAkB,GAClBE,GAAoB,GAJT,kBAaoBW,IAAM,GAAD,OAlDrB,uCAkDqB,0CAEhC,CAEEM,QAAS,CAAE,IAAM,GAAN,OArDE,qFAsDbyF,OAAQ,CACN,UAAY,GAAZ,OAAgBP,MAnBb,cAaHQ,EAbG,QA4BHvF,EAAuB,CAC3BwF,qBAAsBD,EAAevK,KAAKA,KAAKwK,qBAC/CC,OAAQF,EAAevK,KAAKA,KAAKyK,OACjCC,UAAWH,EAAevK,KAAKA,KAAK0K,UACpCC,IAAKJ,EAAevK,KAAKA,KAAK2K,IAC9BC,eAAgBL,EAAevK,KAAKA,KAAK4K,eACzCC,aAAcN,EAAevK,KAAKA,KAAK6K,eAGpCD,eAAyC,OAAxB5F,EAAK4F,eACvBE,KAAKC,MAAMR,EAAevK,KAAKA,KAAK4K,gBACpC5F,EAAK4F,eAvCA,UAyCHI,EAAchG,GAzCX,0DA8CTtC,QAAQC,IAAI,QAAZ,MA9CS,mCA8DqB4B,IAAM,kDAAD,OACiBwF,GAClD,CACElF,QAAS,CAAE,WAAW,GAAX,OAAeC,uEAjErB,eA8DLmG,EA9DK,OAuELjL,EAAOiL,EAAkBjL,KAAKA,KAC9BkL,EAAQC,OAAOC,OAAOpL,EAAKkF,WAAWI,uBACtC+F,EAAoBrL,EAAKkF,WAAWO,oBACpCC,EAAYwF,EAAMI,QAAO,SAACC,GAAD,MAA2B,cAAfA,EAAEC,YAErCxG,EAA0B,CAC9ByG,QAASJ,EAAkB3F,UAC3BmF,aAAcK,EAAMpC,OACpB4B,UAAW1K,EAAKR,GAChBkG,aAhFO,UAmFHgG,EAAmB1G,GAnFhB,2DAsFTtC,QAAQC,IAAI,QAAZ,MAtFS,yBAkGK,UAlGL,UAmGqB4B,IAAM,qDAAD,OACoBwF,EADpB,YADrB,YAlGL,eAmGL4B,EAnGK,OA0GL3L,EAAO2L,EAAkB3L,KACzBkL,EAAQC,OAAOC,OAAOpL,EAAK4L,YAE/BlJ,QAAQC,IAAI,2CAA4C3C,GAElDgF,EAA0B,CAC9B0F,UAAW1K,EAAK6L,UAChBC,IAAK9L,EAAK8L,IACVC,YAAa/L,EAAKgM,aAClBC,eAAgBf,EAAM,GACtBgB,cAAehB,EAAM,IApHd,UAuHHiB,EAAmBnH,GAvHhB,2DA0HTtC,QAAQC,IAAI,QAAZ,MA1HS,QAsIXqH,EAAM,IACNtG,GAAkB,GAClBE,GAAoB,GAxIT,0EAAH,sDA4IJyG,EAAa,SAACN,GAElB,QADaqC,EAAOrC,IAKhBiB,EAAa,uCAAG,WAAOhG,GAAP,eAAAX,EAAA,yDACY,GAC5BgI,EAAWnC,KAAKa,MAAM1C,aAAaiE,QAAQ,eAAiB,OACtDD,EACY9F,MACpB,SAACC,GAAD,OACEA,EAAEkE,YAAc1F,EAAK0F,aANL,uBAUlBjE,IAAMC,KAAN,wCAAkCqD,EAAlC,eAAmD,CACjDpD,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAjBM,iCAsBpBuC,EAAW8C,QAAQvH,GAEnB0E,EAAcD,GAxBM,UA0BdlF,IA1Bc,QA+BpBH,IA/BoB,4CAAH,sDAkCbsH,EAAkB,uCAAG,WAAO1G,GAAP,eAAAX,EAAA,yDACU,GAC/BgI,EAAWnC,KAAKa,MAAM1C,aAAaiE,QAAQ,kBAAoB,OACzDD,EACY9F,MACpB,SAACC,GAAD,OACEA,EAAEkE,YAAc1F,EAAK0F,aANA,uBAUvBjE,IAAMC,KAAN,wCAAkCqD,EAAlC,kBAAsD,CACpDpD,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAjBW,iCAsBzByC,EAAc4C,QAAQvH,GAEtB4E,EAAiBD,GAxBQ,UA0BnBpF,IA1BmB,QA+BzBH,IA/ByB,4CAAH,sDAkClB+H,EAAkB,uCAAG,WAAOnH,GAAP,eAAAX,EAAA,yDACU,GAC/BgI,EAAWnC,KAAKa,MAAM1C,aAAaiE,QAAQ,kBAAoB,OACzDD,EACY9F,MACpB,SAACC,GAAD,OACEA,EAAEkE,YAAc1F,EAAK0F,aANA,uBAUvBjE,IAAMC,KAAN,wCAAkCqD,EAAlC,kBAAsD,CACpDpD,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,IAjBW,iCAsBzB2C,EAAc0C,QAAQvH,GAEtB8E,EAAiBD,GAxBQ,UA0BnBtF,IA1BmB,QA+BzBH,IA/ByB,4CAAH,sDAoDlBgI,EAAS,SAACrC,GAGd,OAFoB,IAAItC,OAAO,uKACNC,KAAKqC,IAgBhC,OACE,oCACE,kBAAC,IAAD,CACEpD,SAAS,YACTC,UAAW,IACXC,iBAAiB,EACjBc,aAAa,EACbb,cAAY,EACZc,KAAK,EACLC,kBAAgB,EAChBb,WAAS,EACTD,cAAY,IAGd,kBAAC,IAAD,MAGA,kBAACe,EAAA,EAAD,CAAOzH,KAAMA,EAAM0H,OAAQtD,GACzB,kBAACqD,EAAA,EAAME,OAAP,CAAcC,aAAW,GACvB,kBAACH,EAAA,EAAMI,MAAP,wBAEF,kBAACJ,EAAA,EAAMK,KAAP,qDACA,kBAACL,EAAA,EAAMM,OAAP,KACE,kBAACnI,EAAA,EAAD,CAAQlB,QAAQ,YAAYoE,QAASsB,GAArC,YAGA,kBAACxE,EAAA,EAAD,CAAQlB,QAAQ,UAAUoE,QA5ThB,WAChBsB,IACA4D,aAAaC,UA0TP,eAwBJ,kBAAClH,EAAA,EAAD,CAAMjC,UAAU,uBACd,kBAACiC,EAAA,EAAKC,MAAN,CAAYC,UAAU,gCACpB,wBAAInC,UAAU,oBAAd,eAIA,kBAACiC,EAAA,EAAKG,MAAN,2BACsB,IACpB,+BACE,qCAGJ,kBAACH,EAAA,EAAKmH,QAAN,CACE1I,MAAO,CAAE2I,SAAU,QACnBC,GAAG,WACHC,KAAM,EACNC,MAAOoB,EACP9K,KAAM,KACN2C,SAAU,SAACC,GAAD,OAAOmI,EAAMnI,EAAEE,OAAO4G,QAChCvF,SAAUO,KAGd,yBAAKxE,UAAU,eACb,kBAACc,EAAA,EAAD,CACEd,UAAU,OACVJ,QAAQ,UACRoE,QAAS,kBAAMuB,EAAKqF,IACpB3G,SAAUK,GAAyB,KAAPsG,GAJ9B,eAqBJ,yBAAK5K,UAAU,wCACb,8BASA,yBACEA,UAAU,OACVU,MACwB,IAAtB4J,EAAWX,OAAe,CAAEC,cAAe,OAAQC,QAAS,OAAU,MAM5E,yBACE7J,UAAU,mCACVU,MAAO,CAAE2I,SAAU,SAKnB,wBAAIrJ,UAAU,kBAAiB,yBAAKqN,IAAI,cAAcC,IAAI,0BAA0B5M,MAAO,CAAE6M,OAAQ,UAArG,aACA,kBAACzD,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACnK,KAAK,MACjC,+BACE,4BACE,iCACA,yCACA,oDACA,sCACA,mCACA,8CACA,8CAGJ,+BACGwK,EAAWJ,KAAI,SAACC,EAAI9C,GAAL,OACd,wBAAI+C,IAAK/C,GACP,4BAAKA,EAAI,GACT,4BAAK8C,EAAGoB,WACR,4BAAI,kBAACiC,EAAA,EAAD,CACFC,UAAQ,EACR7N,QAAQ,UACR2C,MAAK,UAAK4H,EAAGkB,qBAAR,KACLqC,IAAKvD,EAAGkB,wBAEV,4BAAKlB,EAAGmB,QACR,4BAAKnB,EAAGqB,KACR,4BAE0B,OAAtBrB,EAAGsB,eACD,IAAIkC,KAAKC,eAAe,QAAS,CAC/BC,KAAM,UACNC,MAAO,OACPC,IAAK,YACJC,OAAO7D,EAAGsB,gBACbtB,EAAGsB,gBAIT,4BAAKtB,EAAGuB,oBAQhB,wBAAI1L,UAAU,kBAAiB,yBAAKqN,IAAI,iBAAiBC,IAAI,mBAAmB5M,MAAO,CAAE6M,OAAQ,UAAjG,eACA,kBAACzD,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACnK,KAAK,MACjC,+BACE,4BACE,iCACA,yCACA,6DAAkC,6BAAlC,4BACA,2CACA,0CAKJ,+BACG0K,EAAcN,KAAI,SAACC,EAAI9C,GAAL,OACjB,wBAAI+C,IAAK/C,GACP,4BAAKA,EAAI,GACT,4BAAK8C,EAAGoB,WACR,4BAAKpB,EAAGmC,QAAR,IAAkBnC,EAAGuB,cAErB,4BACE,kBAAC5B,EAAA,EAAD,KACE,+BACGK,EAAG5D,UAAU2D,KAAI,SAACxH,EAAGuL,GAAJ,OAChB,wBAAI7D,IAAK6D,GACP,4BAAKvL,EAAEwL,oBAMjB,4BACE,kBAACpE,EAAA,EAAD,KACE,+BACGK,EAAG5D,UAAU2D,KAAI,SAACxH,EAAGuL,GAAJ,OAChB,wBAAI7D,IAAK6D,GACP,4BAAKvL,EAAE2J,uBAezB,wBAAIrM,UAAU,kBAAiB,yBAAKqN,IAAI,sBAAsBC,IAAI,0BAA0B5M,MAAO,CAAE6M,OAAQ,UAA7G,mBACA,kBAACzD,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACnK,KAAK,MACjC,+BACE,4BACE,iCACA,yCACA,4CACA,mCAEA,4CAGJ,+BACG4K,EAAcR,KAAI,SAACC,EAAI9C,GAAL,OACjB,wBAAI+C,IAAK/C,GACP,4BAAKA,EAAI,GACT,4BAAK8C,EAAGoB,WACR,4BAAKpB,EAAGyC,aACR,4BAAKzC,EAAGwC,KACR,4BACE,uCAAY,0BAAM3M,UAAU,gBAAgBmK,EAAG2C,eAAiB,EAAI,EAAI3C,EAAG2C,gBAA3E,OAAqG,0BAAM9M,UAAU,eAAemK,EAAG2C,gBAAvI,WACC3C,EAAG2C,eAAiB,GACnB,kBAAChD,EAAA,EAAD,KACE,+BACE,4BACE,sCACA,oCACA,2CACA,sCAGHK,EAAG4C,cAAcoB,MAAM,EAAG,GAAGjE,KAAI,SAACxH,EAAGuL,GAAJ,OAChC,2BAAO7D,IAAK6D,GACV,4BACE,4BAAKvL,EAAE0L,OAAOC,UACd,4BAAK3L,EAAEb,MACP,4BAAKa,EAAE4L,aACP,4BAAKC,MAAMC,KAAK9L,EAAE+L,MAAMC,KAAK,uBCrlB1CC,MAlBf,WACE,OACE,oCACA,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,gBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,OACV,kBAAC,EAAD,WClBVC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.9bb8e4bc.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Nav, Navbar } from 'react-bootstrap';\r\nimport { RiVirusLine } from 'react-icons/ri';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NavbarComponent() {\r\n  return (\r\n    <>\r\n      <Navbar bg='success' variant='dark' expand='lg'>\r\n        <RiVirusLine size={32} />\r\n        <Navbar.Brand className='ml-2' href='/virus-total'>\r\n          IOCs Analizer\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Link to=\"/virus-total\" className=\"text-white mr-2\">IOC</Link>\r\n            <Link to=\"/ip\" className=\"text-white mr-2\">IP</Link>\r\n            {/* <Nav.Link href=\"/virus-total\">Virus Total</Nav.Link>   */}\r\n            {/* <Nav.Link href=\"/otro\">Otro</Nav.Link> */}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavbarComponent;\r\n","import React from 'react';\r\nimport { CSVLink } from 'react-csv';\r\nimport { Button } from 'react-bootstrap';\r\n\r\ninterface IiocItem {\r\n  sha256: any;\r\n  sha1: any;\r\n  md5: any;\r\n  mcafee: any;\r\n  engines: any;\r\n}\r\n\r\nfunction ExportExcelComponent({ iocs }: { iocs: IiocItem[] }) {\r\n  return (\r\n    <>\r\n      <CSVLink style={{ textDecoration: 'none', color: '#fff' }} data={iocs}>\r\n        <Button variant='success'>Descargar CSV</Button>\r\n      </CSVLink>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ExportExcelComponent;\r\n","import React, { useState } from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nfunction AlertDismissibleExample({ errorMessage }: { errorMessage: string }) {\r\n  const [show, setShow] = useState(true);\r\n\r\n  if (show) {\r\n    return (\r\n      <Alert variant='danger' onClose={() => setShow(false)} dismissible>\r\n        <Alert.Heading>Oh noo! Tiene un error!</Alert.Heading>\r\n        <p> {errorMessage} </p>\r\n      </Alert>\r\n    );\r\n  }\r\n  return <></>;\r\n}\r\n\r\nexport default AlertDismissibleExample;\r\n","import React, { useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport * as XLSX from 'xlsx';\r\nimport AlertDismissibleExample from '../AlertDismissibleExample';\r\n\r\nconst UploadExcelComponent = ({\r\n  onFileSelectSuccess,\r\n  readFile,\r\n}: {\r\n  onFileSelectSuccess: any;\r\n  readFile: any;\r\n}) => {\r\n  const [disabledButton, setDisabledButton] = useState(true);\r\n  const [name, setName] = useState('');\r\n  const [alert, setAlert] = useState(false);\r\n\r\n  const handleFileInput = (e: any) => {\r\n    var files = e.target.files,\r\n      f = files[0];\r\n    if (f) {\r\n      if (f.size > 1024) {\r\n        // 1 mb in Bites\r\n        setDisabledButton(true);\r\n        setAlert(true);\r\n      } else {\r\n        setName(f.name);\r\n        setDisabledButton(false);\r\n        var reader = new FileReader();\r\n        reader.onload = function (e: any) {\r\n          var data = e.target.result;\r\n          let readedData = XLSX.read(data, { type: 'binary' });\r\n          const wsname = readedData.SheetNames[0];\r\n          console.log('wsname', wsname);\r\n          const ws = readedData.Sheets[wsname];\r\n          console.log('ws', ws);\r\n\r\n          /* Convert array to json*/\r\n          const dataParse = XLSX.utils.sheet_to_json(ws, { header: 1 });\r\n          console.log('dataParse', dataParse[0]);\r\n          onFileSelectSuccess(dataParse[0]);\r\n        };\r\n        reader.readAsBinaryString(f);\r\n      }\r\n    } else {\r\n      onFileSelectSuccess(null);\r\n      setDisabledButton(true);\r\n      setName('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form className='container mt-2 mb-2'>\r\n        <Form.Group controlId='exampleForm.ControlTextarea1'>\r\n          <h2 className='text-center mb-4'>\r\n            Cargar archivo de Indicadores de Compromiso\r\n          </h2>\r\n          <Form.Label>\r\n            Consultar IOCs masivamente; el archivo no puede superar 1024 bytes.\r\n            <a href='/lib/iocs-example.csv' download>\r\n              {' '}\r\n              archivo ejemplo\r\n            </a>\r\n          </Form.Label>\r\n          <br />\r\n          <Form.Label>\r\n            Formato aceptado:{' '}\r\n            <small>\r\n              <b>.CSV</b>\r\n            </small>\r\n          </Form.Label>\r\n          <Form.File\r\n            id='custom-file'\r\n            label={name === '' ? 'Seleccionar archivo' : name}\r\n            custom\r\n            onChange={handleFileInput}\r\n            accept='.csv'\r\n          />\r\n        </Form.Group>\r\n        <div className='text-center'>\r\n          <Button\r\n            className='mb-3 mt-3'\r\n            variant='success'\r\n            onClick={readFile}\r\n            disabled={disabledButton}\r\n          >\r\n            Consultar IOCs\r\n          </Button>\r\n          {alert && (\r\n            <AlertDismissibleExample errorMessage='Recuerde que el archivo no puede superar 1024 bytes.' />\r\n          )}\r\n        </div>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadExcelComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Table, Form, Button, Modal } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport ExportExcelComponent from '../excel/ExportExcelComponent';\r\nimport UploadExcelComponent from '../excel/UploadExcelComponent';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ninterface IiocItem {\r\n  sha256: any;\r\n  sha1: any;\r\n  md5: any;\r\n  mcafee: any;\r\n  engines: any;\r\n}\r\n\r\nfunction IocComponent() {\r\n  const [iocs, setIocs] = useState<IiocItem[]>([]);\r\n  const [ioc, setIoc] = useState('');\r\n  const [buttonDisabled, setButtonDisabled] = useState(false);\r\n  const [textareaDisabled, setTextareaDisabled] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n\r\n  // csv\r\n  const [iocsCsv, setIocsCsv] = useState([]);\r\n  // show component for only one IOC\r\n  const [showFormIoc, setShowFormIoc] = useState(true);\r\n  // show component for only CSV IOC\r\n  const [showFormCsvIoc, setShowFormCsvIoc] = useState(false);\r\n\r\n  useEffect(() => {\r\n    refresh();\r\n  }, []);\r\n\r\n  const refresh = async () => {\r\n    let iocItems: IiocItem[] = [];\r\n    try {\r\n      let data = await axios.get('http://localhost:3000/api/v1/iocs');\r\n      iocItems = data.data;\r\n      setIocs(iocItems);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n  // const handleShow = () => setShow(true);\r\n\r\n  const clearData = () => {\r\n    handleClose();\r\n    localStorage.clear();\r\n    refresh();\r\n  };\r\n\r\n  const save = async (hash: string) => {\r\n    const isValidHash = validateHash(hash);\r\n    if (!isValidHash) return;\r\n    setButtonDisabled(true);\r\n    setTextareaDisabled(true);\r\n    try {\r\n      //const proxyurl = 'https://cors-anywhere.herokuapp.com/';\r\n      const fetchIoc = await axios(\r\n        `https://www.virustotal.com/api/v3/files/${hash}`,\r\n        {\r\n          headers: { 'x-apiKey': `${process.env.REACT_APP_API_KEY}` },\r\n        }\r\n      );\r\n      // Success 🎉\r\n      const item: IiocItem = {\r\n        sha256: fetchIoc.data.data.attributes.sha256,\r\n        sha1: fetchIoc.data.data.attributes.sha1,\r\n        md5: fetchIoc.data.data.attributes.md5,\r\n        mcafee:\r\n          fetchIoc.data.data.attributes.last_analysis_results.McAfee.result,\r\n        engines: `${\r\n          fetchIoc.data.data.attributes.last_analysis_stats.malicious\r\n        } / ${\r\n          fetchIoc.data.data.attributes.last_analysis_stats.malicious +\r\n          fetchIoc.data.data.attributes.last_analysis_stats.undetected\r\n        }`,\r\n      };\r\n\r\n      await submit(item);\r\n    } catch (error) {\r\n      // Error 😨\r\n      if (error.response) {\r\n        /*\r\n         * The request was made and the server responded with a\r\n         * status code that falls out of the range of 2xx\r\n         */\r\n        console.log('error.response.data', error.response.data);\r\n        console.log('error.response.status', error.response.status);\r\n        console.log('error.response.headers', error.response.headers);\r\n      } else if (error.request) {\r\n        /*\r\n         * The request was made but no response was received, `error.request`\r\n         * is an instance of XMLHttpRequest in the browser and an instance\r\n         * of http.ClientRequest in Node.js\r\n         */\r\n        console.log('error.request', error.request);\r\n      } else {\r\n        // Something happened in setting up the request and triggered an Error\r\n        console.log('error.message', error.message);\r\n      }\r\n      console.log('error', error);\r\n\r\n      // si no existe en virus total, solo agregar a lo último\r\n      let isSha256 = isSHA256(hash);\r\n      let isSha1 = isSHA1(hash);\r\n      let isMd5 = isMD5(hash);\r\n\r\n      const item: IiocItem = {\r\n        sha256: isSha256 ? hash : '',\r\n        sha1: isSha1 ? hash : '',\r\n        md5: isMd5 ? hash : '',\r\n        mcafee: '',\r\n        engines: '0 / 0',\r\n      };\r\n\r\n      await submit(item);\r\n    }\r\n    setIoc('');\r\n    setButtonDisabled(false);\r\n    setTextareaDisabled(false);\r\n  };\r\n\r\n  // validar hash con regex\r\n  const validateHash = (hash: string): boolean => {\r\n    let isSha256 = isSHA256(hash);\r\n    let isSha1 = isSHA1(hash);\r\n    let isMd5 = isMD5(hash);\r\n    if (isSha256 || isSha1 || isMd5) return true;\r\n    else return false;\r\n  };\r\n\r\n  const submit = async (item: IiocItem) => {\r\n    let iocItems: IiocItem[] = [];\r\n    let iocs = await axios.get('http://localhost:3000/api/v1/iocs');\r\n    iocItems = iocs.data;\r\n    let isExist = iocItems.some(\r\n      (i) =>\r\n        i.sha256 === item.sha256 && i.sha1 === item.sha1 && i.md5 === item.md5\r\n    );\r\n\r\n    if (isExist) {\r\n      toast.info(`🤔 Ya existe el Ioc! ${ioc} `, {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n\r\n    await axios\r\n      .post('http://localhost:3000/api/v1/iocs', item)\r\n      .then((res) => console.log(res))\r\n      .catch((err) => console.log(err));\r\n\r\n    refresh();\r\n  };\r\n\r\n  // read file\r\n  const readFile = () => {\r\n    iocsCsv.forEach((ioc) => {\r\n      save(ioc);\r\n    });\r\n  };\r\n\r\n  const handleWindow = (e: any) => {\r\n    if (e.target.name === 'showFormIoc') {\r\n      setShowFormIoc(false);\r\n      setShowFormCsvIoc(true);\r\n    }\r\n    if (e.target.name === 'showFormCsvIoc') {\r\n      setShowFormCsvIoc(false);\r\n      setShowFormIoc(true);\r\n    }\r\n  };\r\n\r\n  const isSHA256 = (hash: string): boolean => {\r\n    const regexSHA256 = new RegExp('^[A-Fa-f0-9]{64}$');\r\n    let isSHA256 = regexSHA256.test(hash);\r\n    return isSHA256;\r\n  };\r\n\r\n  const isSHA1 = (hash: string): boolean => {\r\n    const regexSHA1 = new RegExp('^[a-fA-F0-9]{40}$');\r\n    let isSHA1 = regexSHA1.test(hash);\r\n    return isSHA1;\r\n  };\r\n\r\n  const isMD5 = (hash: string): boolean => {\r\n    const regexMD5 = new RegExp('^[a-f0-9]{32}$');\r\n    let isMD5 = regexMD5.test(hash);\r\n    return isMD5;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        position='top-right'\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      {/* Same as */}\r\n      <ToastContainer />\r\n\r\n      {/* Modal */}\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Eliminar datos</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Está seguro que desea eliminar los datos?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant='primary' onClick={clearData}>\r\n            Continuar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* navbar intern one IOC or IOCs CVS */}\r\n      <div className='mt-5 mb-3 d-flex container'>\r\n        <div>\r\n          {showFormIoc && (\r\n            <Button name='showFormIoc' variant='link' onClick={handleWindow}>\r\n              Ir a CSV archivo masivo\r\n            </Button>\r\n          )}\r\n          {showFormCsvIoc && (\r\n            <Button name='showFormCsvIoc' variant='link' onClick={handleWindow}>\r\n              Ir a IOC uno a uno\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Form one IOC*/}\r\n      {showFormIoc && (\r\n        <Form className='container mt-2 mb-2'>\r\n          <Form.Group controlId='exampleForm.ControlTextarea1'>\r\n            <h2 className='text-center mb-4'>\r\n              Ingresar Indicador de Compromiso\r\n            </h2>\r\n            <Form.Label>Consultar IOCs uno a uno en Virus Total</Form.Label> <br />\r\n            <Form.Label>\r\n              Formatos aceptados:{' '}\r\n              <small>\r\n                <b>SHA256, MD5 & SHA-1</b>\r\n              </small>\r\n            </Form.Label>\r\n            <Form.Control\r\n              style={{ fontSize: '30px' }}\r\n              as='textarea'\r\n              rows={2}\r\n              value={ioc}\r\n              size={'sm'}\r\n              onChange={(e) => setIoc(e.target.value)}\r\n              disabled={textareaDisabled}\r\n            />\r\n          </Form.Group>\r\n          <div className='text-center'>\r\n            <Button\r\n              className='mb-3'\r\n              variant='success'\r\n              onClick={() => save(ioc)}\r\n              disabled={buttonDisabled || ioc === ''}\r\n            >\r\n              Consultar\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n\r\n      {/* Form two or more IOCs*/}\r\n      {showFormCsvIoc && (\r\n        <UploadExcelComponent\r\n          onFileSelectSuccess={(file: any) => setIocsCsv(file)}\r\n          readFile={readFile}\r\n        />\r\n      )}\r\n\r\n      {/* Data table */}\r\n      <div className='mb-3 mr-3 d-flex justify-content-end'>\r\n        <div>\r\n          {/* <Button\r\n            variant=\"danger\"\r\n            onClick={handleShow}\r\n            disabled={iocs.length === 0}\r\n          >\r\n            Limpiar\r\n          </Button> */}\r\n        </div>\r\n        <div\r\n          className='ml-3'\r\n          style={\r\n            iocs.length === 0 ? { pointerEvents: 'none', opacity: '0.4' } : {}\r\n          }\r\n        >\r\n          <ExportExcelComponent iocs={iocs} />\r\n        </div>\r\n      </div>\r\n      <div\r\n        className='container-fluid table-responsive'\r\n        style={{ fontSize: '14px' }}\r\n      >\r\n        <Table striped bordered hover size='sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>SHA256</th>\r\n              <th>SHA-1</th>\r\n              <th>MD5</th>\r\n              <th>McAfee</th>\r\n              <th>Motores</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {iocs.map((el, i) => (\r\n              <tr key={i}>\r\n                <td>{i + 1}</td>\r\n                <td>{el.sha256}</td>\r\n                <td>{el.sha1}</td>\r\n                <td>{el.md5}</td>\r\n                <td>{el.mcafee}</td>\r\n                <td>{el.engines}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default IocComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Table, Form, Button, Modal } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n// import ExportExcelComponent from '../excel/ExportExcelComponent';\r\n// import UploadExcelComponent from '../excel/UploadExcelComponent';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\n\r\ninterface IipItemAbuseIp {\r\n  abuseConfidenceScore: any;\r\n  domain: any;\r\n  ipAddress: any;\r\n  isp: any;\r\n  lastReportedAt: any;\r\n  totalReports: any;\r\n}\r\ninterface IipItemVirusTotal {\r\n  reports: any;\r\n  totalReports: any;\r\n  ipAddress: any;\r\n  malicious: any[];\r\n  // isp: any;\r\n  // lastReportedAt: any;\r\n}\r\ninterface IipItemAlienvault {\r\n  ipAddress: any;\r\n  asn: any;\r\n  countryName: any;\r\n  pulseInfoCount: any;\r\n  pulseInfoList: any[];\r\n}\r\ninterface IPulseInfo {\r\n  count: number;\r\n  tags: any[];\r\n  name: any;\r\n  description: any;\r\n  author: any;\r\n}\r\n\r\nfunction IpComponent() {\r\n  const [ipsAbuseIp, setIpsAbuseIp] = useState<IipItemAbuseIp[]>([]);\r\n  const [ipsVirusTotal, setIpsVirusTotal] = useState<IipItemVirusTotal[]>([]);\r\n  const [ipsAlienvault, setIpsAlienvault] = useState<IipItemAlienvault[]>([]);\r\n  const [ip, setIp] = useState('');\r\n\r\n\r\n  const [buttonDisabled, setButtonDisabled] = useState(false);\r\n  const [textareaDisabled, setTextareaDisabled] = useState(false);\r\n  const [show, setShow] = useState(false);\r\n\r\n\r\n  const proxyurl = 'https://cors-anywhere.herokuapp.com/';\r\n  const keyAbuseIpDb = '673b76fb36714c2a41a73b11d30d91b2db2ea4d330e02aa7618a4ceff23e301e30afb0f8ddbb7d45';\r\n  // const keyIbmXForce = '1d5e46f3-c66e-40e5-b88a-f69d7233f513'\r\n\r\n  // csv\r\n  // const [iocsCsv, setIocsCsv] = useState([]);\r\n  // show component for only one IOC\r\n  // const [showFormIp, setShowFormIp] = useState(true);\r\n  // show component for only CSV IOC\r\n  // const [showFormCsvIp, setShowFormCsvIp] = useState(false);\r\n\r\n  useEffect(() => {\r\n    refresh();\r\n  }, []);\r\n\r\n  const refresh = async () => {\r\n    // let ipItems: IipItem[] = [];\r\n    try {\r\n      // setIps(ipItems);\r\n      localStorage.setItem(\"ipsAbuseIp\", JSON.stringify(ipsAbuseIp));\r\n      localStorage.setItem(\"ipsVirusTotal\", JSON.stringify(ipsVirusTotal));\r\n      localStorage.setItem(\"ipsAlienvault\", JSON.stringify(ipsAlienvault));\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n  // const handleShow = () => setShow(true);\r\n\r\n  const clearData = () => {\r\n    handleClose();\r\n    localStorage.clear();\r\n    // refresh();\r\n  };\r\n\r\n  const save = async (ip: string) => {\r\n    const isValidIp = validateIp(ip);\r\n    if (!isValidIp) return;\r\n    setButtonDisabled(true);\r\n    setTextareaDisabled(true);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    try {\r\n      const fetchIpAbuseIp = await axios(\r\n        `${proxyurl}https://api.abuseipdb.com/api/v2/check`,\r\n        {\r\n          // headers: { 'Key': `${process.env.REACT_APP_API_KEY_ABUSEIP}` },\r\n          headers: { 'Key': `${keyAbuseIpDb}` },\r\n          params: {\r\n            'ipAddress': `${ip}`,\r\n            // 'ipAddress': `36.91.140.95`,\r\n          }\r\n        }\r\n      );\r\n\r\n      // console.log('fetchIpAbuseIp', fetchIpAbuseIp.data.data)\r\n\r\n      // Success 🎉\r\n      const item: IipItemAbuseIp = {\r\n        abuseConfidenceScore: fetchIpAbuseIp.data.data.abuseConfidenceScore,\r\n        domain: fetchIpAbuseIp.data.data.domain,\r\n        ipAddress: fetchIpAbuseIp.data.data.ipAddress,\r\n        isp: fetchIpAbuseIp.data.data.isp,\r\n        lastReportedAt: fetchIpAbuseIp.data.data.lastReportedAt,\r\n        totalReports: fetchIpAbuseIp.data.data.totalReports\r\n      };\r\n\r\n      item.lastReportedAt = item.lastReportedAt !== null\r\n        ? Date.parse(fetchIpAbuseIp.data.data.lastReportedAt)\r\n        : item.lastReportedAt\r\n\r\n      await submitAbuseIp(item);\r\n\r\n      // await submit(item);\r\n    } catch (error) {\r\n      // Error 😨\r\n      console.log('error', error);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    try {\r\n      let fetchIPVirusTotal = await axios(\r\n        `https://www.virustotal.com/api/v3/ip_addresses/${ip}`,\r\n        {\r\n          headers: { 'x-apiKey': `${process.env.REACT_APP_API_KEY}` },\r\n        }\r\n      );\r\n\r\n      // console.log('fetchIPVirusTotal', fetchIPVirusTotal.data)\r\n\r\n      let data = fetchIPVirusTotal.data.data\r\n      let data2 = Object.values(data.attributes.last_analysis_results)\r\n      let lastAnalysisStats = data.attributes.last_analysis_stats\r\n      let malicious = data2.filter((x: any) => x.category === 'malicious');\r\n\r\n      const item: IipItemVirusTotal = {\r\n        reports: lastAnalysisStats.malicious,\r\n        totalReports: data2.length,\r\n        ipAddress: data.id,\r\n        malicious\r\n      };\r\n\r\n      await submitVirusTotalIp(item);\r\n    } catch (error) {\r\n      // Error 😨\r\n      console.log('error', error);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    try {\r\n      let section = 'general';\r\n      let fetchIPalienvault = await axios(\r\n        `https://otx.alienvault.com/api/v1/indicators/IPv4/${ip}/${section}`,\r\n        // {\r\n        //   headers: { 'OTX-Key': `c139efd0a176ed62add569d1fe377b61285a47a1c9541e973f6468a4079c6a51` },\r\n        // }\r\n      );\r\n\r\n      let data = fetchIPalienvault.data\r\n      let data2 = Object.values(data.pulse_info)\r\n\r\n      console.log(\"-----------fetchIPalienvault------------\", data)\r\n\r\n      const item: IipItemAlienvault = {\r\n        ipAddress: data.indicator,\r\n        asn: data.asn,\r\n        countryName: data.country_name,\r\n        pulseInfoCount: data2[0],\r\n        pulseInfoList: data2[1] as any[]\r\n      };\r\n\r\n      await submitAlienVaultIp(item);\r\n    } catch (error) {\r\n      // Error 😨\r\n      console.log('error', error);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    setIp('');\r\n    setButtonDisabled(false);\r\n    setTextareaDisabled(false);\r\n  };\r\n\r\n  //validar hash con regex\r\n  const validateIp = (ip: string): boolean => {\r\n    let isIpv4 = isIPV4(ip);\r\n    if (isIpv4) return true;\r\n    else return false;\r\n  };\r\n\r\n  const submitAbuseIp = async (item: IipItemAbuseIp) => {\r\n    let ipItems: IipItemAbuseIp[] = [];\r\n    let ips: any = JSON.parse(localStorage.getItem(\"ipsAbuseIp\") || '{}'); // await axios.get('http://localhost:3000/api/v1/iocs');\r\n    ipItems = ips;\r\n    let isExist = ipItems.some(\r\n      (i) =>\r\n        i.ipAddress === item.ipAddress\r\n    );\r\n\r\n    if (isExist) {\r\n      toast.info(`🤔 Ya existe la IP! ${ip} en AbuseIp`, {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n\r\n    ipsAbuseIp.unshift(item)\r\n\r\n    setIpsAbuseIp(ipsAbuseIp);\r\n\r\n    await axios\r\n    // .post('http://localhost:3000/api/v1/iocs', item)\r\n    // .then((res) => console.log(res))\r\n    // .catch((err) => console.log(err));\r\n\r\n    refresh();\r\n  };\r\n\r\n  const submitVirusTotalIp = async (item: IipItemVirusTotal) => {\r\n    let ipItems: IipItemVirusTotal[] = [];\r\n    let ips: any = JSON.parse(localStorage.getItem(\"ipsVirusTotal\") || '{}'); // await axios.get('http://localhost:3000/api/v1/iocs');\r\n    ipItems = ips;\r\n    let isExist = ipItems.some(\r\n      (i) =>\r\n        i.ipAddress === item.ipAddress\r\n    );\r\n\r\n    if (isExist) {\r\n      toast.info(`🤔 Ya existe la IP! ${ip} en VirusTotal`, {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n\r\n    ipsVirusTotal.unshift(item)\r\n\r\n    setIpsVirusTotal(ipsVirusTotal);\r\n\r\n    await axios\r\n    // .post('http://localhost:3000/api/v1/iocs', item)\r\n    // .then((res) => console.log(res))\r\n    // .catch((err) => console.log(err));\r\n\r\n    refresh();\r\n  };\r\n\r\n  const submitAlienVaultIp = async (item: IipItemAlienvault) => {\r\n    let ipItems: IipItemAlienvault[] = [];\r\n    let ips: any = JSON.parse(localStorage.getItem(\"ipsAlienvault\") || '{}'); // await axios.get('http://localhost:3000/api/v1/iocs');\r\n    ipItems = ips;\r\n    let isExist = ipItems.some(\r\n      (i) =>\r\n        i.ipAddress === item.ipAddress\r\n    );\r\n\r\n    if (isExist) {\r\n      toast.info(`🤔 Ya existe la IP! ${ip} en AlienVault`, {\r\n        position: 'top-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      return;\r\n    }\r\n\r\n    ipsAlienvault.unshift(item)\r\n\r\n    setIpsAlienvault(ipsAlienvault);\r\n\r\n    await axios\r\n    // .post('http://localhost:3000/api/v1/iocs', item)\r\n    // .then((res) => console.log(res))\r\n    // .catch((err) => console.log(err));\r\n\r\n    refresh();\r\n  };\r\n\r\n  // read file\r\n  // const readFile = () => {\r\n  //   iocsCsv.forEach((ioc) => {\r\n  //     save(ioc);\r\n  //   });\r\n  // };\r\n\r\n  // const handleWindow = (e: any) => {\r\n  //   if (e.target.name === 'showFormIoc') {\r\n  //     setShowFormIoc(false);\r\n  //     setShowFormCsvIoc(true);\r\n  //   }\r\n  //   if (e.target.name === 'showFormCsvIoc') {\r\n  //     setShowFormCsvIoc(false);\r\n  //     setShowFormIoc(true);\r\n  //   }\r\n  // };\r\n\r\n  const isIPV4 = (ip: string): boolean => {\r\n    const regexSHA256 = new RegExp('^([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])\\\\.([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])$');\r\n    let isIpv4 = regexSHA256.test(ip);\r\n    return isIpv4;\r\n  };\r\n\r\n  // const isSHA1 = (hash: string): boolean => {\r\n  //   const regexSHA1 = new RegExp('^[a-fA-F0-9]{40}$');\r\n  //   let isSHA1 = regexSHA1.test(hash);\r\n  //   return isSHA1;\r\n  // };\r\n\r\n  // const isMD5 = (hash: string): boolean => {\r\n  //   const regexMD5 = new RegExp('^[a-f0-9]{32}$');\r\n  //   let isMD5 = regexMD5.test(hash);\r\n  //   return isMD5;\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        position='top-right'\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      {/* Same as */}\r\n      <ToastContainer />\r\n\r\n      {/* Modal */}\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Eliminar datos</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Está seguro que desea eliminar los datos?</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            Cancelar\r\n          </Button>\r\n          <Button variant='primary' onClick={clearData}>\r\n            Continuar\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* navbar intern one IOC or IOCs CVS */}\r\n      {/* <div className='mt-5 mb-3 d-flex container'>\r\n        <div>\r\n          {showFormIoc && (\r\n            <Button name='showFormIoc' variant='link' onClick={handleWindow}>\r\n              Ir a CSV archivo masivo\r\n            </Button>\r\n          )}\r\n          {showFormCsvIoc && (\r\n            <Button name='showFormCsvIoc' variant='link' onClick={handleWindow}>\r\n              Ir a IOC uno a uno\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div> */}\r\n\r\n      {/* Form one IOC*/}\r\n      {/* {showFormIoc && ( */}\r\n      <Form className='container mt-2 mb-2'>\r\n        <Form.Group controlId='exampleForm.ControlTextarea1'>\r\n          <h2 className='text-center mb-4'>\r\n            Ingresar IP\r\n          </h2>\r\n          {/* <Form.Label>Consultar IPs una a una en AbuseIPDB</Form.Label> <br /> */}\r\n          <Form.Label>\r\n            Formatos aceptados:{' '}\r\n            <small>\r\n              <b>IPv4</b>\r\n            </small>\r\n          </Form.Label>\r\n          <Form.Control\r\n            style={{ fontSize: '30px' }}\r\n            as='textarea'\r\n            rows={2}\r\n            value={ip}\r\n            size={'sm'}\r\n            onChange={(e) => setIp(e.target.value)}\r\n            disabled={textareaDisabled}\r\n          />\r\n        </Form.Group>\r\n        <div className='text-center'>\r\n          <Button\r\n            className='mb-3'\r\n            variant='success'\r\n            onClick={() => save(ip)}\r\n            disabled={buttonDisabled || ip === ''}\r\n          >\r\n            Consultar\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n      {/* )} */}\r\n\r\n      {/* Form two or more IOCs*/}\r\n      {/* {showFormCsvIoc && (\r\n        <UploadExcelComponent\r\n          onFileSelectSuccess={(file: any) => setIocsCsv(file)}\r\n          readFile={readFile}\r\n        />\r\n      )} */}\r\n\r\n      {/* Data table */}\r\n      <div className='mb-3 mr-3 d-flex justify-content-end'>\r\n        <div>\r\n          {/* <Button\r\n            variant=\"danger\"\r\n            onClick={handleShow}\r\n            disabled={iocs.length === 0}\r\n          >\r\n            Limpiar\r\n          </Button> */}\r\n        </div>\r\n        <div\r\n          className='ml-3'\r\n          style={\r\n            ipsAbuseIp.length === 0 ? { pointerEvents: 'none', opacity: '0.4' } : {}\r\n          }\r\n        >\r\n          {/* <ExportExcelComponent ips={ips} /> */}\r\n        </div>\r\n      </div>\r\n      <div\r\n        className='container-fluid table-responsive'\r\n        style={{ fontSize: '14px' }}\r\n      >\r\n\r\n        {/* ------------------- AbuseIp-------------- */}\r\n\r\n        <h2 className='text-left mt-4'><img alt=\"AbuseIp Img\" src='/lib/abuseipdb-logo.svg' style={{ height: '40px' }} />AbuseIPDB</h2>\r\n        <Table striped bordered hover size='sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>IpAddress</th>\r\n              <th>AbuseConfidenceScore</th>\r\n              <th>Domain</th>\r\n              <th>Isp</th>\r\n              <th>LastReportedAt</th>\r\n              <th>TotalReports</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ipsAbuseIp.map((el, i) => (\r\n              <tr key={i}>\r\n                <td>{i + 1}</td>\r\n                <td>{el.ipAddress}</td>\r\n                <td><ProgressBar\r\n                  animated\r\n                  variant=\"warning\"\r\n                  label={`${el.abuseConfidenceScore}%`}\r\n                  now={el.abuseConfidenceScore}\r\n                /></td>\r\n                <td>{el.domain}</td>\r\n                <td>{el.isp}</td>\r\n                <td>\r\n                  {\r\n                    el.lastReportedAt !== null ?\r\n                      new Intl.DateTimeFormat(\"es-CO\", {\r\n                        year: \"numeric\",\r\n                        month: \"long\",\r\n                        day: \"2-digit\"\r\n                      }).format(el.lastReportedAt) :\r\n                      el.lastReportedAt\r\n                  }\r\n\r\n                </td>\r\n                <td>{el.totalReports}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n\r\n\r\n        {/* ------------------- Virus Total-------------- */}\r\n        <h2 className='text-left mt-4'><img alt=\"VirusTotal Img\" src='/lib/vt_logo.svg' style={{ height: '30px' }} />Virus Total</h2>\r\n        <Table striped bordered hover size='sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>IpAddress</th>\r\n              <th>Security Vendors Flagged this <br /> IP Address as Malicious</th>\r\n              <th>Engine Name</th>\r\n              <th>Category</th>\r\n              {/* <th>LastReportedAt</th>\r\n              <th>TotalReports</th> */}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ipsVirusTotal.map((el, i) => (\r\n              <tr key={i}>\r\n                <td>{i + 1}</td>\r\n                <td>{el.ipAddress}</td>\r\n                <td>{el.reports}/{el.totalReports}\r\n                </td>\r\n                <td>\r\n                  <Table>\r\n                    <tbody>\r\n                      {el.malicious.map((e, l) => (\r\n                        <tr key={l}>\r\n                          <td>{e.engine_name}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                </td>\r\n                <td>\r\n                  <Table>\r\n                    <tbody>\r\n                      {el.malicious.map((e, l) => (\r\n                        <tr key={l}>\r\n                          <td>{e.category}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                </td>\r\n                {/* <td></td>\r\n                <td>{el.totalReports}</td> */}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n\r\n\r\n        {/* ------------------- Alien Vault-------------- */}\r\n        <h2 className='text-left mt-4'><img alt=\"Alien Vault OTX Img\" src='/lib/OTX-logo-white.svg' style={{ height: '30px' }} />Alien Vault OTX</h2>\r\n        <Table striped bordered hover size='sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>IpAddress</th>\r\n              <th>Country Name</th>\r\n              <th>Asn</th>\r\n              {/* <th>PulseInfo Count</th> */}\r\n              <th>Pulse Info</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {ipsAlienvault.map((el, i) => (\r\n              <tr key={i}>\r\n                <td>{i + 1}</td>\r\n                <td>{el.ipAddress}</td>\r\n                <td>{el.countryName}</td>\r\n                <td>{el.asn}</td>\r\n                <td>\r\n                  <h6>Showing <span className=\"text-primary\">{el.pulseInfoCount > 3 ? 3 : el.pulseInfoCount}</span> of <span className=\"text-danger\">{el.pulseInfoCount}</span> pulses</h6>\r\n                  {el.pulseInfoCount > 3 &&\r\n                    <Table>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Author</th>\r\n                          <th>Name</th>\r\n                          <th>Description</th>\r\n                          <th>Tags</th>\r\n                        </tr>\r\n                      </thead>\r\n                      {el.pulseInfoList.slice(0, 3).map((e, l) => (\r\n                        <tbody key={l}>\r\n                          <tr>\r\n                            <td>{e.author.username}</td>\r\n                            <td>{e.name}</td>\r\n                            <td>{e.description}</td>\r\n                            <td>{Array.from(e.tags).join(\", \")}</td>\r\n                          </tr>\r\n                        </tbody>\r\n                      ))}\r\n                    </Table>\r\n\r\n                  }\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default IpComponent;\r\n\r\n\r\n\r\n      // var user = 'a3636ba7-6203-4677-a5de-49d380591639';\r\n      // var pass = 'db959be4-3e39-423e-8825-7cc52c58f6ab';\r\n\r\n      // var auth = Buffer.from(`${user}:${pass}`).toString('base64')\r\n      // console.log(\"asdafsdasfdsadfafds\", auth)\r\n      // const fetchIpIbmXForce = await axios(\r\n      //   `https://exchange.xforce.ibmcloud.com/api/ipr/${ip}`,\r\n      //   {\r\n      //     headers: {\r\n      //       'Authorization': 'Basic ' + 'MWE2Y2VlZmEtNDVkNC00ZDQ1LTllYmMtNGVhZWQzZjU2OTIxOjNhYmNlMTMzLTdlOTAtNGE4NS1hZWJkLWM4MTA5NDQ2MTk0OA=='\r\n      //     }\r\n      //   }\r\n      // );\r\n      // console.log('fetchIpIbmXForce', fetchIpIbmXForce)","import React from 'react';\r\nimport NavbarComponent from './components/NavbarComponent';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport IocComponentP from './components/ioc/IocComponent';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport IpComponent from './components/ip/IpComponent';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n    <Router>\r\n      <NavbarComponent />\r\n      <Switch>\r\n        <Route path=\"/virus-total\">\r\n          <IocComponentP />\r\n        </Route>\r\n        <Route path=\"/ip\">\r\n          <IpComponent />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <App />\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// );\r\n"],"sourceRoot":""}